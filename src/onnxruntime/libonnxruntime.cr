module OnnxRuntime
  {% if env("ONNXRUNTIMEDIR") %}
    @[Link(ldflags: "-L `echo $ONNXRUNTIMEDIR/lib` -lonnxruntime -Wl,-rpath,`echo $ONNXRUNTIMEDIR/lib`")]
  {% else %}
    @[Link("onnxruntime")]
  {% end %}
  lib LibOnnxRuntime
    enum TensorElementDataType
      Undefined
      Float
      UInt8
      Int8
      UInt16
      Int16
      Int32
      Int64
      String
      Bool
      Float16
      Double
      UInt32
      UInt64
      Complex64
      Complex128
      BFloat16
    end

    enum OnnxType
      Unknown
      Tensor
      Sequence
      Map
      Opaque
      SparseTensor
    end

    struct Api
      create_status : (Int32, LibC::Char* -> Void*)
      get_error_code : (Void* -> Void*)
      get_error_message : (Void* -> Void*)
      create_env : (Int32, LibC::Char*, Void* -> Void*)
      create_env_with_custom_logger : (-> Void*)
      enable_telemetry_events : (Void* -> Void*)
      disable_telemetry_events : (Void* -> Void*)
      create_session : (Void*, Void*, Void*, Void* -> Void*)
      create_session_from_array : (Void*, Void*, LibC::SizeT, Void*, Void* -> Void*)
      run : (Void*, Void*, Void*, Void*, LibC::SizeT, Void*, LibC::SizeT, Void* -> Void*)
      create_session_options : (Void* -> Void*)
      set_optimized_model_file_path : (Void*, Void* -> Void*)
      clone_session_options : (-> Void*)
      set_session_execution_mode : (Void*, Int32 -> Void*)
      enable_profiling : (Void*, Void* -> Void*)
      disable_profiling : (Void* -> Void*)
      enable_mem_pattern : (Void* -> Void*)
      disable_mem_pattern : (Void* -> Void*)
      enable_cpu_mem_arena : (Void* -> Void*)
      disable_cpu_mem_arena : (Void* -> Void*)
      set_session_log_id : (Void*, LibC::Char* -> Void*)
      set_session_log_verbosity_level : (Void*, Int32 -> Void*)
      set_session_log_severity_level : (Void*, Int32 -> Void*)
      set_session_graph_optimization_level : (Void*, Int32 -> Void*)
      set_intra_op_num_threads : (Void*, Int32 -> Void*)
      set_inter_op_num_threads : (Void*, Int32 -> Void*)
      create_custom_op_domain : (-> Void*)
      custom_op_domain_add : (-> Void*)
      add_custom_op_domain : (-> Void*)
      register_custom_ops_library : (-> Void*)
      session_get_input_count : (Void*, Void* -> Void*)
      session_get_output_count : (Void*, Void* -> Void*)
      session_get_overridable_initializer_count : (-> Void*)
      session_get_input_type_info : (Void*, LibC::SizeT, Void* -> Void*)
      session_get_output_type_info : (Void*, LibC::SizeT, Void* -> Void*)
      session_get_overridable_initializer_type_info : (-> Void*)
      session_get_input_name : (Void*, LibC::SizeT, Void*, Void* -> Void*)
      session_get_output_name : (Void*, LibC::SizeT, Void*, Void* -> Void*)
      session_get_overridable_initializer_name : (-> Void*)
      create_run_options : (Void* -> Void*)
      run_options_set_run_log_verbosity_level : (Void*, Int32 -> Void*)
      run_options_set_run_log_severity_level : (Void*, Int32 -> Void*)
      run_options_set_run_tag : (Void*, LibC::Char* -> Void*)
      run_options_get_run_log_verbosity_level : (-> Void*)
      run_options_get_run_log_severity_level : (-> Void*)
      run_options_get_run_tag : (-> Void*)
      run_options_set_terminate : (Void* -> Void*)
      run_options_unset_terminate : (Void* -> Void*)
      create_tensor_as_ort_value : (Void*, Void*, LibC::SizeT, Int32, Void* -> Void*)
      create_tensor_with_data_as_ort_value : (Void*, Void*, LibC::SizeT, Void*, LibC::SizeT, Int32, Void* -> Void*)
      is_tensor : (-> Void*)
      get_tensor_mutable_data : (Void*, Void* -> Void*)
      fill_string_tensor : (Void*, Void*, LibC::SizeT -> Void*)
      get_string_tensor_data_length : (Void*, Void* -> Void*)
      get_string_tensor_content : (Void*, Void*, LibC::SizeT, Void*, LibC::SizeT -> Void*)
      cast_type_info_to_tensor_info : (Void*, Void* -> Void*)
      get_onnx_type_from_type_info : (Void*, Void* -> Void*)
      create_tensor_type_and_shape_info : (-> Void*)
      set_tensor_element_type : (-> Void*)
      set_dimensions : (-> Void*)
      get_tensor_element_type : (Void*, Void* -> Void*)
      get_dimensions_count : (Void*, Void* -> Void*)
      get_dimensions : (Void*, Void*, LibC::SizeT -> Void*)
      get_symbolic_dimensions : (Void*, Void*, LibC::SizeT -> Void*)
      get_tensor_shape_element_count : (Void*, Void* -> Void*)
      get_tensor_type_and_shape : (Void*, Void* -> Void*)
      get_type_info : (Void*, Void* -> Void*)
      get_value_type : (Void*, Void* -> Void*)
      create_memory_info : (-> Void*)
      create_cpu_memory_info : (Int32, Int32, Void* -> Void*)
      compare_memory_info : (-> Void*)
      memory_info_get_name : (-> Void*)
      memory_info_get_id : (-> Void*)
      memory_info_get_mem_type : (-> Void*)
      memory_info_get_type : (-> Void*)
      allocator_alloc : (-> Void*)
      allocator_free : (Void*, Void* -> Void*)
      allocator_get_info : (-> Void*)
      get_allocator_with_default_options : (Void* -> Void*)
      add_free_dimension_override : (Void*, LibC::Char*, Int64 -> Void*)
      get_value : (Void*, Int32, Void*, Void* -> Void*)
      get_value_count : (Void*, Void* -> Void*)
      create_value : (-> Void*)
      create_opaque_value : (-> Void*)
      get_opaque_value : (-> Void*)
      kernel_info_get_attribute_float : (-> Void*)
      kernel_info_get_attribute_int64 : (-> Void*)
      kernel_info_get_attribute_string : (-> Void*)
      kernel_context_get_input_count : (-> Void*)
      kernel_context_get_output_count : (-> Void*)
      kernel_context_get_input : (-> Void*)
      kernel_context_get_output : (-> Void*)
      release_env : (Void* -> Void)
      release_status : (Void* -> Void)
      release_memory_info : (Void* -> Void)
      release_session : (Void* -> Void)
      release_value : (Void* -> Void)
      release_run_options : (Void* -> Void)
      release_type_info : (Void* -> Void)
      release_tensor_type_and_shape_info : (Void* -> Void)
      release_session_options : (Void* -> Void)
      release_custom_op_domain : (Void* -> Void)
      get_denotation_from_type_info : (-> Void*)
      cast_type_info_to_map_type_info : (Void*, Void* -> Void*)
      cast_type_info_to_sequence_type_info : (Void*, Void* -> Void*)
      get_map_key_type : (Void*, Void* -> Void*)
      get_map_value_type : (Void*, Void* -> Void*)
      get_sequence_element_type : (Void*, Void* -> Void*)
      release_map_type_info : (Void* -> Void)
      release_sequence_type_info : (Void* -> Void)
      session_end_profiling : (Void*, Void*, Void* -> Void*)
      session_get_model_metadata : (Void*, Void* -> Void*)
      model_metadata_get_producer_name : (Void*, Void*, Void* -> Void*)
      model_metadata_get_graph_name : (Void*, Void*, Void* -> Void*)
      model_metadata_get_domain : (Void*, Void*, Void* -> Void*)
      model_metadata_get_description : (Void*, Void*, Void* -> Void*)
      model_metadata_lookup_custom_metadata_map : (Void*, Void*, Void*, Void* -> Void*)
      model_metadata_get_version : (Void*, Void* -> Void*)
      release_model_metadata : (Void* -> Void)
      create_env_with_global_thread_pools : (-> Void*)
      disable_per_session_threads : (-> Void*)
      create_threading_options : (-> Void*)
      release_threading_options : (-> Void*)
      model_metadata_get_custom_metadata_map_keys : (Void*, Void*, Void*, Void* -> Void*)
      add_free_dimension_override_by_name : (Void*, LibC::Char*, Int64 -> Void*)
      get_available_providers : (Void*, Void* -> Void*)
      release_available_providers : (Void*, Int32 -> Void*)
      get_string_tensor_element_length : (-> Void*)
      get_string_tensor_element : (-> Void*)
      fill_string_tensor_element : (-> Void*)
      add_session_config_entry : (Void*, LibC::Char*, LibC::Char* -> Void*)
      create_allocator : (-> Void*)
      release_allocator : (-> Void*)
      run_with_binding : (-> Void*)
      create_io_binding : (-> Void*)
      release_io_binding : (-> Void*)
      bind_input : (-> Void*)
      bind_output : (-> Void*)
      bind_output_to_device : (-> Void*)
      get_bound_output_names : (-> Void*)
      get_bound_output_values : (-> Void*)
      clear_bound_inputs : (-> Void*)
      clear_bound_outputs : (-> Void*)
      tensor_at : (-> Void*)
      create_and_register_allocator : (-> Void*)
      set_language_projection : (-> Void*)
      session_get_profiling_start_time_ns : (-> Void*)
      set_global_intra_op_num_threads : (-> Void*)
      set_global_inter_op_num_threads : (-> Void*)
      set_global_spin_control : (-> Void*)
      add_initializer : (-> Void*)
      create_env_with_custom_logger_and_global_thread_pools : (-> Void*)
      session_options_append_execution_provider_cuda : (-> Void*)
      session_options_append_execution_provider_rocm : (-> Void*)
      session_options_append_execution_provider_open_vino : (-> Void*)
      set_global_denormal_as_zero : (-> Void*)
      create_arena_cfg : (-> Void*)
      release_arena_cfg : (-> Void*)
      model_metadata_get_graph_description : (Void*, Void*, Void* -> Void*)
      session_options_append_execution_provider_tensor_rt : (-> Void*)
      set_current_gpu_device_id : (-> Void*)
      get_current_gpu_device_id : (-> Void*)
      kernel_info_get_attribute_array_float : (-> Void*)
      kernel_info_get_attribute_array_int64 : (-> Void*)
      create_arena_cfg_v2 : (-> Void*)
      add_run_config_entry : (-> Void*)
      create_prepacked_weights_container : (-> Void*)
      release_prepacked_weights_container : (-> Void*)
      create_session_with_prepacked_weights_container : (-> Void*)
      create_session_from_array_with_prepacked_weights_container : (-> Void*)
      session_options_append_execution_provider_tensor_rt_v2 : (-> Void*)
      create_tensor_rt_provider_options : (-> Void*)
      update_tensor_rt_provider_options : (-> Void*)
      get_tensor_rt_provider_options_as_string : (-> Void*)
      release_tensor_rt_provider_options : (-> Void*)
      enable_ort_custom_ops : (-> Void*)
      register_allocator : (-> Void*)
      unregister_allocator : (-> Void*)
      is_sparse_tensor : (-> Void*)
      create_sparse_tensor_as_ort_value : (-> Void*)
      fill_sparse_tensor_coo : (-> Void*)
      fill_sparse_tensor_csr : (-> Void*)
      fill_sparse_tensor_block_sparse : (-> Void*)
      create_sparse_tensor_with_values_as_ort_value : (-> Void*)
      use_coo_indices : (-> Void*)
      use_csr_indices : (-> Void*)
      use_block_sparse_indices : (-> Void*)
      get_sparse_tensor_format : (-> Void*)
      get_sparse_tensor_values_type_and_shape : (-> Void*)
      get_sparse_tensor_values : (-> Void*)
      get_sparse_tensor_indices_type_shape : (-> Void*)
      get_sparse_tensor_indices : (-> Void*)
      has_value : (-> Void*)
      kernel_context_get_gpu_compute_stream : (-> Void*)
      get_tensor_memory_info : (-> Void*)
      get_execution_provider_api : (-> Void*)
      session_options_set_custom_create_thread_fn : (-> Void*)
      session_options_set_custom_thread_creation_options : (-> Void*)
      session_options_set_custom_join_thread_fn : (-> Void*)
      set_global_custom_create_thread_fn : (-> Void*)
      set_global_custom_thread_creation_options : (-> Void*)
      set_global_custom_join_thread_fn : (-> Void*)
      synchronize_bound_inputs : (-> Void*)
      synchronize_bound_outputs : (-> Void*)
      session_options_append_execution_provider_cuda_v2 : (-> Void*)
      create_cuda_provider_options : (-> Void*)
      update_cuda_provider_options : (-> Void*)
      get_cuda_provider_options_as_string : (-> Void*)
      release_cuda_provider_options : (-> Void*)
      session_options_append_execution_provider_mi_graph_x : (-> Void*)
    end

    struct ApiBase
      get_api : Void*
      get_version_string : (-> LibC::Char*)
    end

    fun OrtGetApiBase : ApiBase*
  end
end
